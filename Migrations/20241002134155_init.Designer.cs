// <auto-generated />
using System;
using FileStorage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FileStorage.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241002134155_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FileStorage.Models.FileExtentionModel", b =>
                {
                    b.Property<int>("FileExtentionModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileExtentionModelId"));

                    b.Property<byte?>("Foto")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("FileExtentionModelId");

                    b.ToTable("FileExtention");
                });

            modelBuilder.Entity("FileStorage.Models.FileModel", b =>
                {
                    b.Property<int>("FileModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileModelId"));

                    b.Property<string>("Content")
                        .HasColumnType("character varying");

                    b.Property<string>("Description")
                        .HasColumnType("character varying");

                    b.Property<int>("FileExtentionModelId")
                        .HasColumnType("integer");

                    b.Property<int>("FolderModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("FileModelId");

                    b.HasIndex("FileExtentionModelId");

                    b.HasIndex("FolderModelId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("FileStorage.Models.FolderModel", b =>
                {
                    b.Property<int>("FolderModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FolderModelId"));

                    b.Property<string>("FolderParentNameId")
                        .HasColumnType("character varying");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("FolderModelId");

                    b.ToTable("Folder");
                });

            modelBuilder.Entity("FileStorage.Models.FileModel", b =>
                {
                    b.HasOne("FileStorage.Models.FileExtentionModel", "FileExtentionModel")
                        .WithMany("FileModel")
                        .HasForeignKey("FileExtentionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileStorage.Models.FolderModel", "FolderModel")
                        .WithMany("Files")
                        .HasForeignKey("FolderModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileExtentionModel");

                    b.Navigation("FolderModel");
                });

            modelBuilder.Entity("FileStorage.Models.FileExtentionModel", b =>
                {
                    b.Navigation("FileModel");
                });

            modelBuilder.Entity("FileStorage.Models.FolderModel", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
