// <auto-generated />
using System;
using FileStorage.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FileStorage.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FileExtentionFiles", b =>
                {
                    b.Property<int>("fileExtentionExtentionId")
                        .HasColumnType("integer");

                    b.Property<int>("filesFileId")
                        .HasColumnType("integer");

                    b.HasKey("fileExtentionExtentionId", "filesFileId");

                    b.HasIndex("filesFileId");

                    b.ToTable("FileExtentionFiles");
                });

            modelBuilder.Entity("FileStorage.Models.FileExtention", b =>
                {
                    b.Property<int>("ExtentionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExtentionId"));

                    b.Property<byte?>("Foto")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ExtentionId");

                    b.ToTable("DbSetFileExtentions");
                });

            modelBuilder.Entity("FileStorage.Models.Files", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ExtentionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FolderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FileId");

                    b.ToTable("DbSetFiles");
                });

            modelBuilder.Entity("FileStorage.Models.Folders", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FolderId"));

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<string>("FolderParentNameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("filesFileId")
                        .HasColumnType("integer");

                    b.HasKey("FolderId");

                    b.HasIndex("filesFileId");

                    b.ToTable("DbSetFolders");
                });

            modelBuilder.Entity("FileExtentionFiles", b =>
                {
                    b.HasOne("FileStorage.Models.FileExtention", null)
                        .WithMany()
                        .HasForeignKey("fileExtentionExtentionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileStorage.Models.Files", null)
                        .WithMany()
                        .HasForeignKey("filesFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileStorage.Models.Folders", b =>
                {
                    b.HasOne("FileStorage.Models.Files", "files")
                        .WithMany("Folders")
                        .HasForeignKey("filesFileId");

                    b.Navigation("files");
                });

            modelBuilder.Entity("FileStorage.Models.Files", b =>
                {
                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
